---

import "../styles/timeline.css"

import { getCatIconAndLabel } from "../scripts/helpers.js";

const { activeProject } = Astro.props;
const { events } = Astro.props;
const { postsWithLifespan } = Astro.props;

const projectPosts = await Astro.glob('../pages/*.md');
const project = projectPosts.filter(post => {
    return  post.frontmatter.title === activeProject;
})[0];

console.log(project);

let createFullDate = function(date, project) {

    if (!date.full){

        let padWithLeadingZeros = function(num, totalLength) {
            return String(num).padStart(totalLength, '0');
        }

        let notation = null;

        if (date.year !== undefined && project.frontmatter.timeline.notation){
            notation = date.isCommonEra ? project.frontmatter.timeline.commonEraNotation : project.frontmatter.timeline.beforeCommonEraNotation;
        }

        date.full = '';
        date.full = date.year !== undefined ? date.full += `${date.year}` : date.full;
        date.full = date.year !== undefined && date.month ? date.full += `-${padWithLeadingZeros(date.month, 2)}` : date.full;
        date.full = date.year !== undefined && date.month && date.day ? date.full += `-${padWithLeadingZeros(date.day, 2)}` : date.full;
        date.full = notation ? date.full += ` ${notation}` : date.full;
    }

    if (!date.numerical){

        if (date.year !== -Infinity) {
            date.numerical = date.year !== undefined ? date.year * 1000000 : 0;
            date.numerical += date.month !== undefined ? date.month * 1000 : 0;
            date.numerical += date.day !== undefined ? date.day : 0;
            if (!date.isCommonEra) date.numerical * -1;

        } else {
            date.numerical = -Infinity;
        }

    }

}

// Generate a full date for each event
events.map((event) => {
    createFullDate(event.date, project);
});

// Generate a full date for each lifespan
postsWithLifespan.map((post) => {
    if (post.frontmatter.lifespan.startDate){
        createFullDate(post.frontmatter.lifespan.startDate, project);
    }
    if (post.frontmatter.lifespan.endDate){
        createFullDate(post.frontmatter.lifespan.endDate, project);
    }
})

// Sort the events array by date
events.sort((a, b) => a.date.numerical - b.date.numerical);


---

<div class="viewport">
    <ul class="list">
        {events.map((event) => {

            // Get the category icon and singular label
            let icon = getCatIconAndLabel(event.postCategory).icon;
            let label = getCatIconAndLabel(event.postCategory).label;

                return  (
                    <li class="event" 
                    data-item 
                    data-category={event.postCategory} 
                    data-date={event.date.numerical}>
                        <div class="label-group">
                            <p class="date">{event.date.full}</p>
                            <ul class="compare-group">

                                {postsWithLifespan.map((post) => {

                                    let startDate = post.frontmatter.lifespan.startDate;
                                    let endDate = post.frontmatter.lifespan.endDate;

                                    if ((startDate !== undefined && startDate.numerical !== undefined && startDate.numerical < event.date.numerical) 
                                        && (endDate === undefined || (endDate !== undefined && endDate.numerical !== undefined && event.date.numerical < endDate.numerical))){
                                        
                                        return (
                                            <li class="compare"  
                                            data-item 
                                            data-title={post.frontmatter.title}
                                            hidden>{post.frontmatter.title} {post.frontmatter.lifespan.startDate.verb.toLowerCase()} {~~((event.date.numerical - startDate.numerical) / 1000000)} years ago</li>   
                                        )

                                    } else if (endDate !== undefined && endDate.numerical !== undefined && event.date.numerical > endDate.numerical) {

                                        return (
                                            <li class="compare" 
                                            data-item 
                                            data-title={post.frontmatter.title} 
                                            hidden>{post.frontmatter.title} {post.frontmatter.lifespan.endDate.verb.toLowerCase()} {~~((event.date.numerical - endDate.numerical) / 1000000)} years ago</li>
                                        )

                                    }
                                    
                                })}                                

                            </ul> 
                        </div>
                        <div class="content-group">
                            <p class="category"><Fragment set:html={icon} />{event.postCategory === 'Events' ? label : event.postTitle}</p>
                            <p class="title">{event.title}</p>
                            { event.description && (
                                <p class="description">{event.description}</p>   
                            )}                            
                        </div>
                    </li>
                )

        })}
        
    </ul>
</div>
