---

import BaseLayout from "./BaseLayout.astro";
import Timeline from "../components/Timeline.astro";
import IconCloseCircle from "../components/IconCloseCircle.astro";
import IconClose from "../components/IconClose.astro";
import { getCatIconAndLabel } from "../scripts/helpers.js"

const { activeProject } = Astro.props;
const { projectPosts } = Astro.props;
const { events } = Astro.props;

let activeCategories = [...new Set(events.map(a => a.postCategory))];

let postsWithLifespan = projectPosts.filter((post) => {
    return post.frontmatter.lifespan !== undefined 
        && (

            (post.frontmatter.lifespan.startDate !== undefined 
            && (post.frontmatter.lifespan.startDate.year !== undefined
                || post.frontmatter.lifespan.startDate.month !== undefined
                || post.frontmatter.lifespan.startDate.day !== undefined
            ))

        || 

            (post.frontmatter.lifespan.endDate !== undefined
            && (post.frontmatter.lifespan.endDate.year !== undefined
                || post.frontmatter.lifespan.endDate.month !== undefined
                || post.frontmatter.lifespan.endDate.day !== undefined
            ))

        );
})

console.log(postsWithLifespan);



---

<BaseLayout pageTitle={activeProject} activeProject={activeProject}>
    <main>
        <h1>{activeProject} Timeline</h1>
        <section class="timeline">

            {events.length > 0 ? (

                <form 
                data-filter-group 
                data-list-selector="section.timeline ul.list" 
                data-items-selector="li.event" 
                data-sort-selector="section.timeline .sort-group" 
                data-min="1">
                    {activeCategories.map((category) => {
                        return (
                            <label class="btn-m">
                                <span>{category}</span>
                                <input type="checkbox" name="filter" value={category.toString().toLowerCase()} data-type="category" checked/>
                                <IconClose classes={'icon-controls'}/>
                            </label>
                        )
                    })}
                </form>

                <form class="sort-group" 
                data-list-selector="section.timeline ul.list" 
                data-items-selector="li.event">
                    <label>
                        <span>Sort by</span>
                        <div class="select-group">
                            <select name="sort" id="sort-select">
                                <option value='{ "list": { "id": "byDateNumAsc" } }' selected>Date Ascending</option>
                                <option value='{ "list": { "id": "byDateNumDesc" } }'>Date Descending</option>
                            </select>
                        </div>
                    </label>
                </form>

                <div id="search-timeline-compare" class="search-group accordion" 
                data-list-selector=".search-results" 
                data-items-selector="li.result">
                    <form class="search-form">
                        <input class="search-input" class="text-field" type="search"  minlength="3" placeholder={"Compare lifespan"} autocomplete="off" data-type="title"/>
                        <button class="search-submit" class="submit" type="button" >
                            <svg class="search-submit-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                <circle cx="9.5" cy="9.5" r="7.5"/>
                                <line x1="14.8" y1="14.8" x2="22" y2="22"/>
                            </svg>
                        </button>
                    </form>
                    <form class="search-results filter-group" 
                    data-list 
                    data-list-selector="section.timeline ul.list" 
                    data-items-selector="li.compare"
                    data-max="3" hidden>
                        <div class="active sort-group"
                        data-sublist 
                        data-sublist-true
                        data-list-selector="#search-timeline-compare .search-results" 
                        data-items-selector="li.result" 
                        data-sort='{ "list": { "id": "byName" }, "sublist": { "id": "byCondition", "condition": ":has(:checked)", "clone": true } }' hidden>
                            <p class="label">Active <span class="counter">0</span>/3</p>
                            <ul data-sublist-bin></ul>
                        </div>
                        <div class="inactive sort-group"
                        data-sublist 
                        data-sublist-false
                        data-list-selector="#search-timeline-compare .search-results" 
                        data-items-selector="li.result" 
                        data-sort='{ "list": { "id": "byName" }, "sublist": { "id": "byCondition", "condition": ":has(:checked)", "clone": true } }'>
                            <p class="label">Search Results</p>
                            <ul data-sublist-bin>
                                {postsWithLifespan.map((post) => {
                                    return (
                                        <li class="result" 
                                        data-item 
                                        data-title={post.frontmatter.title.toLowerCase()} 
                                        hidden>
                                            <label class="btn-s">
                                                <span class="icon-group" set:html={getCatIconAndLabel(post.frontmatter.category).icon}></span>
                                                <span class="title">{post.frontmatter.title}</span>
                                                <IconClose classes={'icon-controls'}/> 
                                                <input type="checkbox" name="compare" value={post.frontmatter.title.toLowerCase()} data-type="title"></input>
                                            </label>
                                        </li>
                                    )
                                })}
                                <li class="error" hidden>
                                    <p>No matches were found.</p>
                                </li>
                            </ul>
                        </div>
                    </form>
                </div>
                
                <Timeline events={events} postsWithLifespan={postsWithLifespan} />

            ) : (

                <p>There are no events in this project.</p>

            )} 

        </section>
    </main>
</BaseLayout>