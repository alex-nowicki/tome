---
import BaseLayout from "./BaseLayout.astro";
import SidePanel from "../components/SidePanel.astro";

import IconBookmarks from "../components/IconBookmarks.astro";
import IconPeople from "../components/IconPeople.astro";
import IconGroups from "../components/IconGroups.astro";
import IconPlaces from "../components/IconPlaces.astro";
import IconEvents from "../components/IconEvents.astro";
import IconThings from "../components/IconThings.astro";
import IconChange from "../components/IconChange.astro";
import IconProjects from "../components/IconProjects.astro";

import { toTitleCase } from "../scripts/helpers";

import "../styles/project.css";

const { frontmatter } = Astro.props;

// Determine active project
const activeProject = frontmatter.title;

// Get project posts
const posts = await Astro.glob('../pages/*/*/*.md');
const projectPosts = posts.filter(post => {
    return post.url.includes(activeProject.toLowerCase());
}).sort((a,b) => {
    if (a.frontmatter.title < b.frontmatter.title) return -1;
    if (a.frontmatter.title > b.frontmatter.title) return 0;
    return 0;
});


// Generate list of projects
const projectPages = await Astro.glob('../pages/*.md');
const projects = [];
for (const page of projectPages){
    let project = {
        url: page.url,
        title: page.url.split('/')[1]
    }
    if (project.title !== activeProject){
        projects.push(project);
    }
}

// Create a new Intl.DateTimeFormat object
let formatter = new Intl.DateTimeFormat('en-US', {
    dateStyle: 'medium',
    timeStyle: 'short' 
});


---

<BaseLayout pageTitle={activeProject} activeProject={activeProject}>
    <main class="project">
        <h1>{activeProject} Articles</h1>
        <section class="articles">
            <form id="filters">
                <input type="radio" id="filterAll" name="filter" value="all" checked/>
                <label for="filterAll">All</label>
                <input type="radio" id="filterBookmarks" name="filter" value="bookmarks" />
                <label for="filterBookmarks">Bookmarks</label>
                <input type="radio" id="filterPeople" name="filter" value="people" />
                <label for="filterPeople">People</label>
                <input type="radio" id="filterGroups" name="filter" value="groups" />
                <label for="filterGroups">Groups</label>
                <input type="radio" id="filterPlaces" name="filter" value="places" />
                <label for="filterPlaces">Places</label>
                <input type="radio" id="filterEvents" name="filter" value="events" />
                <label for="filterEvents">Events</label>
                <input type="radio" id="filterThings" name="filter" value="things" />
                <label for="filterThings">Things</label>
            </form>
            <form id="sort">
                <label>Sort by</label>
                <div class="select-group">
                    <select name="sort" id="sort-select">
                        <option value="byTitle" selected>Title</option>
                        <option value="byDate">Date Published</option>
                    </select>
                 </div>
            </form>
            <ul id="list">
                {projectPosts.map((post) => {
                    let icon;
                    if (post.frontmatter.category === 'People') {
                        icon = <IconPeople />;
                    } else if (post.frontmatter.category === 'Groups') {
                        icon = <IconGroups />;
                    } else if (post.frontmatter.category === 'Places') {
                        icon = <IconPlaces />;
                    } else if (post.frontmatter.category === 'Events') {
                        icon = <IconEvents />;
                    } else if (post.frontmatter.category === 'Things') {
                        icon = <IconThings />;
                    }
                    return  <li data-title={post.frontmatter.title} data-date={post.frontmatter.date} data-category={post.frontmatter.category}>
                                <a href={post.url}>
                                    <span class="icon-group">{icon}</span>
                                    <span class="title">{post.frontmatter.title}</span>
                                    <span class="date">{formatter.format(Date.parse(post.frontmatter.date))}</span>    
                                </a>
                                <button class="bookmark-toggle"><IconBookmarks /></button>
                            </li>
                })}
            </ul>
        </section>
    </main>
</BaseLayout>

<script src="../scripts/tab.js"></script>
<script src="../scripts/filter.js"></script>
<script src="../scripts/bookmarks.js" defer></script>