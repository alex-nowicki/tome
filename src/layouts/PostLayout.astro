---
import IconArrow from "../components/icon_show.astro";
import BaseLayout from "./BaseLayout.astro";
import SidePanel from "../components/SidePanel.astro";

import { toTitleCase } from '../scripts/helpers.js';

import "../styles/post.css";

const {frontmatter} = Astro.props;

// Determine active project and post
const postPath = frontmatter.url.split('/');
const activeProject = postPath[1];
const activePost = frontmatter.url;

// Get active post content
const postContent = await Astro.props.compiledContent();

// Get project posts
const posts = await Astro.glob('../pages/*/*/*.md');
const projectPosts = posts.filter(post => {
    return post.url.includes(`${activeProject}`) && !post.url.includes(`${activePost}`);
})

// Collect all search terms in an array
let searchArr = [];
let searchArrTerms = [];
for (const obj of projectPosts) {
    if (obj.frontmatter.searchTerms) {
        for (const term of obj.frontmatter.searchTerms) {
            searchArr.push({
                term: term,
                url: obj.url
            })
        }
    }
}

// Sort terms from longest to shortest
searchArr.sort((a, b) => b.term.length - a.term.length);
searchArr.map((obj) => searchArrTerms.push(obj.term));

let editedPostContent = postContent;

for (const obj of searchArr){
    let term = obj.term;
    // Replace quote marks with regex that captures all types
    term = term.replaceAll("'", "['’]");
    term = term.replaceAll('"', '[“”"]');
    let pattern = `(?<!<a[^>]*)(?<!<[^>]*)(${term})(?![^<]*<\/a>)`;
    let flags = 'gi'; // g for global and i for case-insensitive
    let regex = new RegExp(pattern, flags);
    editedPostContent = editedPostContent.replaceAll(regex, `<a href="${obj.url}">$&</a>`);
}

let postInfoBox = Object.keys(frontmatter.info).map((key) => {
    let valueStr;
    if (Array.isArray(frontmatter.info[key])){
        let valueList;
        valueList = frontmatter.info[key].map((value) => {
            if (searchArrTerms.includes(value)){
                return `<li><a href="${searchArr[searchArrTerms.indexOf(value)].url}">${value}</a></li>`;
            } else {
                return `<li>${value}</li>`;
            }
        }).join('');
        valueStr = `<ul>${valueList}</ul>`;
    } else {
        if (searchArrTerms.includes(frontmatter.info[key])) {
            valueStr = `<p><a href="${searchArr[searchArrTerms.indexOf(frontmatter.info[key])].url}">${frontmatter.info[key]}</a></p>`;
        } else {
            valueStr = `<p>${frontmatter.info[key]}</p>`
        }
    }
    return `<div><h2>${key}</h2>${valueStr}</div>`;
}).join('');


---

<BaseLayout frontmatter={frontmatter}>
    <main>
        <SidePanel frontmatter={frontmatter}/>
        <article>
            <div class="breadcrumbs">
                {postPath.map((step, index) => {
                    if (index == 0){
                        return ''
                    } else if (index == 1){
                        return <a href=`../../${step}`>{toTitleCase(step)}</a><IconArrow />
                    } else if (index == 2){
                        return <a href=`../${step}`>{toTitleCase(step)}</a><IconArrow />
                    } else {
                        return <a href={step}>{frontmatter.title}</a>
                    }
                })}
            </div>
            <h1>{frontmatter.title}</h1>
            <img src="" />
            <section class="infobox" set:html={postInfoBox}></section>
            <section class="content">
                <div set:html={editedPostContent}></div>
                <slot />
                <!-- Slot for MD content -->
            </section>
        </article>
    </main>
</BaseLayout>
